#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
简化版的URL转Markdown工具
基于已获取的网页内容创建Markdown文档
"""

from datetime import datetime
import os


def create_tencent_im_markdown():
    """
    创建腾讯云IM群组系统文档的Markdown版本
    基于已获取的网页内容
    """
    
    content = """# 群组系统

> 来源: [腾讯云文档](https://cloud.tencent.com/document/product/269/1502)
> 获取时间: {date}

---

**最近更新时间：2025-05-12 18:08:12**

## 本页目录：

* 群组系统简介
* 群成员角色介绍
* 群组类型介绍  
   * 群组基础能力操作差异  
   * 加群方式差异  
   * 成员管理能力差异  
   * 群组限制差异  
   * 消息能力差异  
   * 批量导入与自动回收差异
* 群组数据结构介绍  
   * 群基础资料  
   * 群成员资料  
   * 权限组资料
* 权限组中权限介绍  
   * 权限组中的权限含义介绍
* 针对话题的权限介绍
* 自定义群组 ID
* 自定义话题 ID
* 自定义权限组 ID
* 自定义字段  
   * 特性介绍  
   * 配置方法
* 自定义回调

## 群组系统简介

群组系统是一个支持多人聊天的即时通信系统，以下视频为您详细介绍群组系统：

群组系统所具备的基本能力包括：

完备的 **群组管理** 能力：创建/解散群组、成员管理、群组资料管理、成员资料管理等。

稳定可靠的消息收发能力，完善的 **群组消息** 管理机制：权限控制，禁言，消息回调，消息漫游等。

根据常见使用场景，默认配置了**好友工作群（Work）**、**陌生人社交群（Public）**、**临时会议群（Meeting）**、**直播群（AVChatRoom）**和**社群（Community）** 五个群组类型。

可拓展的群成员人数上限：

- 好友工作群（Work）、陌生人社交群（Public）和临时会议群（Meeting）成员人数上限最高支持付费拓展到6000人，详情请参阅[价格说明](https://cloud.tencent.com/document/product/269/11673)。

- 社群（Community）常规为10万人，最高支持100万人（企业版客户可[提交工单](https://cloud.tencent.com/about/connect)进行申请）

- 直播群（AVChatRoom）成员人数无上限。

**注意：**

- 直播群（AVChatRoom）不设成员人数上限，但如果预期群成员会出现短时间内激增的场景（例如举行大型在线活动，应用下直播群同时在线人数超过10万等情况），请提前3天联系[腾讯云客服](https://cloud.tencent.com/about/connect)或商务工作人员，提供 SDKAppID 和活动预期发生时间进行服务资源报备。

- 目前仅非直播群具备历史消息存储能力（体验版及专业版套餐包默认7天，旗舰版默认30天、企业版默认90天）。如需保存更长时间，您可以在[控制台](https://console.cloud.tencent.com/im/login-message)修改历史消息存储时长。延长历史消息存储时长是付费增值服务，具体计费说明请参考[价格说明](https://cloud.tencent.com/document/product/269/11673)。

- 社群（Community），娱乐协作新利器。同一社群内，既可划分不同分组、话题，将消息相互区隔，进行分层级沟通；又可容纳超大规模成员，共用一套好友关系，助您摸索出一条独特的社交扩张路径；适用于兴趣交友、游戏社交、粉丝运营、组织管理等场景。

社群（Community）功能支持终端 SDK 5.8.1668增强版及以上版本、Web SDK 2.17.0及以上版本，需[购买旗舰版或企业版套餐包](https://cloud.tencent.com/document/product/269/32458)并在 **控制台**>**群功能配置**>**社群** 打开开关后方可使用。

除此之外，即时通信 IM 群组系统具备高度可定制性，具体包括：

- 自定义消息元素
- 自定义群组 ID
- 自定义话题 ID
- 自定义字段
- 自定义回调

## 群成员角色介绍

群组中各成员的角色及其权限如下表：

| 群组成员角色  | 描述                             | 管理权限                                                                    |
| ------- | ------------------------------ | ----------------------------------------------------------------------- |
| 普通成员    | 不具备管理权限的群成员                    | 好友工作群（Work）中，普通成员具备修改群组资料的权限                                            |
| 管理员     | 由群主任命的、协助群主来管理群组的群成员，拥有一定的管理权限 | 修改群组基本资料<br/>将普通群成员踢出群<br/>将普通群成员禁言（即禁止其在一段时间内发言）<br/>审批其他用户的入群申请<br/>好友工作群（Work）默认不支持设置管理员 |
| 群主      | 群组的创建者，在群组中拥有最高的管理权限           | 群主具备管理员所拥有的各项权限之外，还拥有如下权限：<br/>任命/取消管理员<br/>将管理员踢出群组<br/>将管理员禁言<br/>解散群组<br/>转让群组                |
| App 管理员 | 具备管理 App 中所有群组权限的一种特殊身份，能力超过群主 | App 管理员可以不是群组中的成员，但是拥有群主具备的所有权限                                         |

## 群组类型介绍

根据常见使用场景，默认配置了以下群组类型：

| 群组类型            | 适用场景                                                                                                                                                                                                                                                                                      |
| --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| 好友工作群（Work）      | 适用于较为私密的聊天场景，例如企业内部员工群，创建后不能自由加入，只能由已有群成员邀请入群。群组名称不支持修改，群成员资料对外不可见，无法搜索到群组，群成员只能由群成员邀请，不支持申请加群，群内支持发红包。                                                                                                                                                                          |
| 陌生人社交群（Public）   | 适用于公开群组，群主管理群组，可以通过搜索群 ID 找到群组，支持申请加群，需要群主或管理员审批通过才能入群。                                                                                                                                                                                                                                 |
| 临时会议群（Meeting）    | 适用于音视频会议场景，例如多人音视频通话，群组创建后可以随意进出，且支持查看入群前消息；群组不支持申请加群，需要他人邀请入群；适合用于音视频会议等临时组建的群组，也支持随时解散。                                                                                                                                                                                         |
| 直播群（AVChatRoom）   | 适用于互动直播聊天室等场景，可随意进出，人数无上限，但不支持历史消息存储；新成员可以查看入群前消息，但查看消息量有限制；Web 端和小程序端支持以游客身份（即不登录）接收消息；成员进出群组时，不会向其他成员下发对应的事件通知，但可以配置进群欢迎消息以及群内成员统计功能，群成员上限无限制；支持以游客身份接收消息；群成员人数只返回在线人数的概括性描述（例如：群成员超过1000人）；群组不支持申请加群，只能通过邀请入群；支持向全员推送消息。 |
| 社群（Community）    | 创建成功后可以随意进出，适用于超大社群场景，例如企业组织架构、兴趣爱好群组等，支持万人大群，群成员上限为10万人，支持分组和话题等功能。                                                                                                                                                                                                                   |

### 群组基础能力操作差异

不同类型的群组在基础能力操作上存在差异：

| 群组类型 | 群主管理权限 | 群成员邀请权限 | 群资料修改权限 | 群消息接收模式 |
|----------|-------------|-------------|-------------|-------------|
| Work | 无群主概念，所有成员均可管理群组 | 所有成员均可邀请他人入群 | 所有成员均可修改群资料 | 推拉结合 |
| Public | 群主具备完整管理权限 | 仅群主和管理员可邀请他人入群 | 仅群主和管理员可修改群资料 | 推拉结合 |
| Meeting | 群主具备完整管理权限 | 仅群主和管理员可邀请他人入群 | 仅群主和管理员可修改群资料 | 推拉结合 |
| AVChatRoom | 群主具备完整管理权限 | 仅群主和管理员可邀请他人入群 | 仅群主和管理员可修改群资料 | 仅推送模式 |
| Community | 群主具备完整管理权限 | 支持权限组控制 | 支持权限组控制 | 推拉结合 |

### 加群方式差异

| 群组类型 | 申请加群 | 邀请加群 | 自由进出 |
|----------|----------|----------|----------|
| Work | 不支持 | 支持 | 不支持 |
| Public | 支持（需审批） | 支持 | 不支持 |
| Meeting | 不支持 | 支持 | 不支持 |
| AVChatRoom | 不支持 | 支持 | 支持 |
| Community | 支持（需审批） | 支持 | 支持 |

### 成员管理能力差异

| 群组类型 | 群成员上限 | 踢出群成员 | 禁言群成员 | 设置管理员 |
|----------|-----------|-----------|-----------|-----------|
| Work | 200（可扩展至6000） | 不支持 | 不支持 | 不支持 |
| Public | 2000（可扩展至6000） | 支持 | 支持 | 支持 |
| Meeting | 6000 | 支持 | 支持 | 支持 |
| AVChatRoom | 无上限 | 支持 | 支持 | 支持 |
| Community | 10万（最高100万） | 支持 | 支持 | 支持权限组 |

### 群组限制差异

| 群组类型 | 群资料搜索 | 群成员资料对外展示 | 申请加群理由长度 |
|----------|-----------|----------------|----------------|
| Work | 不支持 | 不支持 | - |
| Public | 支持 | 支持 | 120字节 |
| Meeting | 不支持 | 支持 | - |
| AVChatRoom | 不支持 | 支持 | - |
| Community | 支持 | 支持 | 120字节 |

### 消息能力差异

| 群组类型 | 历史消息存储 | 离线推送 | 消息漫游 | 消息回调 |
|----------|-------------|----------|----------|----------|
| Work | 支持 | 支持 | 支持 | 支持 |
| Public | 支持 | 支持 | 支持 | 支持 |
| Meeting | 支持 | 支持 | 支持 | 支持 |
| AVChatRoom | 不支持 | 不支持 | 不支持 | 支持 |
| Community | 支持 | 支持 | 支持 | 支持 |

### 批量导入与自动回收差异

| 群组类型 | 支持批量导入 | 自动回收 |
|----------|-------------|----------|
| Work | 支持 | 群组没有活跃成员超过一定时间后自动回收 |
| Public | 支持 | 群组没有活跃成员超过一定时间后自动回收 |
| Meeting | 支持 | 群组没有活跃成员超过一定时间后自动回收 |
| AVChatRoom | 不支持 | 群组创建后40天内无人发言将被自动解散 |
| Community | 支持 | 群组没有活跃成员超过一定时间后自动回收 |

## 群组数据结构介绍

### 群基础资料

群基础资料指的是群组名称、群公告、群介绍、群头像等基础信息。

| 字段 | 含义 | 备注 |
|------|------|------|
| GroupId | 群组 ID | 群组的唯一标识，由系统生成或用户指定 |
| Type | 群组类型 | Work、Public、Meeting、AVChatRoom、Community |
| Name | 群组名称 | 群组的名称，最长30字节 |
| Introduction | 群介绍 | 群组的介绍信息，最长400字节 |
| Notification | 群公告 | 群组的公告信息，最长300字节 |
| FaceUrl | 群头像URL | 群组的头像URL |
| Owner_Account | 群主账号 | 群组创建者的账号 |
| CreateTime | 创建时间 | 群组的创建时间 |
| InfoSeq | 群资料变更序列号 | 用于群资料变更检测 |
| LastInfoTime | 最后群资料变更时间 | 群组资料最后变更的时间 |
| LastMsgTime | 最新消息时间 | 群组最后一条消息的时间 |
| MemberNum | 当前成员数量 | 群组当前的成员数量 |
| MaxMemberNum | 最大成员数量 | 群组允许的最大成员数量 |
| ApplyJoinOption | 申请加群选项 | FreeAccess、NeedPermission、DisableApply |

### 群成员资料

群成员资料指的是群成员的昵称、角色、入群时间等信息。

| 字段 | 含义 | 备注 |
|------|------|------|
| Member_Account | 成员账号 | 群成员的账号 |
| Role | 成员角色 | Owner、Admin、Member |
| JoinTime | 入群时间 | 成员加入群组的时间 |
| NameCard | 群名片 | 成员在群组中的名片，最长50字节 |
| AppMemberDefinedData | 群成员自定义字段 | 成员的自定义数据 |
| MsgSeq | 成员消息序列号 | 用于标识成员接收消息的序列号 |
| MsgFlag | 成员消息接收选项 | AcceptAndNotify、AcceptNotNotify、Discard |
| LastSendMsgTime | 最后发言时间 | 成员最后一次发言的时间 |
| MuteUntil | 禁言到期时间 | 成员被禁言的到期时间 |

### 权限组资料

权限组是社群（Community）特有的功能，用于管理不同成员的权限。

| 字段 | 含义 | 备注 |
|------|------|------|
| PermissionGroupId | 权限组 ID | 权限组的唯一标识 |
| PermissionGroupName | 权限组名称 | 权限组的名称，最长30字节 |
| Permission | 权限值 | 按位表示的权限值 |
| CustomData | 权限组自定义数据 | 权限组的自定义字段 |

## 权限组中权限介绍

### 权限组中的权限含义介绍

社群（Community）支持权限组功能，可以对不同的成员设置不同的权限。权限采用按位的方式进行表示，各个权限位的含义如下：

| 权限名称 | 权限含义 | 权限值 |
|----------|----------|---------|
| ModifyGroupInfo | 修改群资料权限 | 1<<0 |
| KickGroupMember | 踢出群成员权限 | 1<<1 |
| BanGroupMember | 禁言群成员权限 | 1<<2 |
| GetOnlineMemberNum | 获取群在线成员数权限 | 1<<3 |

## 针对话题的权限介绍

社群（Community）支持话题功能，可以在社群内创建不同的话题进行分层级沟通。针对话题，也支持权限控制：

| 权限名称 | 权限含义 | 权限值 |
|----------|----------|---------|
| ManageTopic | 管理话题权限 | 1<<0 |
| CreateTopic | 创建话题权限 | 1<<1 |
| SendTopicMessage | 发送话题消息权限 | 1<<2 |
| GetTopicMessage | 拉取话题消息权限 | 1<<3 |
| GetJoinTopicHistoryMessage | 拉取入群前的话题历史消息权限 | 1<<4 |
| RevokeOtherMemberTopicMessage | 撤回他人话题消息权限 | 1<<5 |
| TopicAtAll | 在话题中发消息时支持@all 的权限 | 1<<6 |

## 自定义群组 ID

默认情况下，App 创建群时，即时通信 IM 会为新创建的群组分配一个默认的群组 ID。该 ID 将以 @TGS# 开头，且保证在 App 中唯一。

为了使得群组 ID 更加简单，便于记忆传播，即时通信 IM 支持 App 在通过 REST API 创建群组时自定义群组 ID。自定义群组 ID 必须为可打印 ASCII 字符（0x20-0x7e），最长48个字节，且前缀不能为 @TGS#（避免与默认分配的群组 ID 混淆）。

**注意：**

社群（Community）前缀必须是@TGS#\_。

## 自定义话题 ID

默认情况下，App 创建话题时，即时通信 IM 会为新创建的话题分配一个默认的话题 ID。该 ID 将以 `GroupId+@TOPIC#_`开头，且保证在群组内唯一。

为了使得话题 ID 更加简单，便于记忆传播，即时通信 IM 支持 App 在通过 REST API 创建话题时自定义话题 ID。自定义话题 ID 的形式为`GroupId+@TOPIC#_+自定义部分`，其中自定义部分不能包括`@TGS#_和@TOPIC#_@TOPIC#` （避免与默认分配的群组 ID 混淆）, 且必须为可打印 ASCII 字符（`0x20-0x7e`）。

例如 GroupId 为`@TGS#_@TGS#cQVLVHIM62CJ`，自定义部分为`TestTopic`，则最终的自定义话题 ID 为`@TGS#_@TGS#cQVLVHIM62CJ@TOPIC#_TestTopic`。整个自定义话题 ID 长度需要保证在96个字节内。

## 自定义权限组 ID

默认情况下，App 创建权限组时，即时通信 IM 会为新创建的权限组分配一个默认的权限组ID。该 ID 将以 @PMG#\_@PMG#开头，且保证在群组内唯一。

为了使得权限组 ID 更加简单，便于记忆传播，即时通信 IM 支持 App 在通过 REST API 创建权限组时自定义权限组 ID。自定义权限组 ID 必须以@PMG#\_开头（但是不能以@PMG#\_@PMG#开头，避免与默认分配的权限组ID混淆）且为可打印 ASCII 字符（`0x20-0x7e`）。

## 自定义字段

即时通信 IM 支持 App 根据业务需求，在群组和群成员两个维度上设置自定义字段。群组维度最多支持10个字段，群成员维度最多支持5个字段。利用自定义字段，App 可以将一些额外数据附加到群组之上，并可以通过现有接口进行读写操作。

### 特性介绍

每个自定义字段有以下特性：

- 为 Key-Value 形式。
- Key 为 String 类型，长度不超过16字节，其命名仅支持英文大小写字母、数字、下划线。
- Value 为用户自定义 Buffer，可以为二进制数据，群维度的 Value 长度不超过512字节，群成员维度的 Value 长度不超过64字节。如果 Value 是二进制数据，需要转化为可打印纯文本字符流再使用，避免 json 格式不支持二进制数据嵌入等因素，例如可将二进制数据转换为 base64格式。
- 支持配置每个 Key 的最小读权限、最小写权限。

每个自定义字段的读写权限从高到低分别为：

1. App 管理员可读/可写。
2. 群主可读/可写。
3. 群管理员可读/可写。
4. 群成员可读/可写。
5. 任何人（包括非成员）可读/可写。

例如，App 需要在群组中扩展一个字段 GroupLevel，其 Value 为一个数字，用于记录该群的等级信息。假设等级信息需要 App 后台计算得出，那么该字段的最小写权限应当为"App 管理员可写"。该字段应当为群的公开资料，故而其最小读权限应当为"任何人（包括非成员）可读"。

对于 C/C++ 开发者，如果需要存储的 Value 是数字，建议将其存储为数字的字符串形式，而非其二进制形式（例如，当存储的数字是1时，建议存储字符串"1"，而非二进制数据 0x01）。对于自定义字段，即时通信 IM 后续会扩展出更多操作方式，例如对 Value 进行特定数学操作等，这些运算未来都会以基于字符串形式表示的数字来进行操作。

### 配置方法

这两个维度的自定义字段，都可以通过即时通信 IM 控制台进行配置。配置群成员维度的自定义字段前，需要先指定群组类型。但对于直播群（AVChatRoom）及以其为参考的群组类型，因为不存储所有群成员的资料，所以不支持群成员维度的自定义字段。

"自己的读写权限"是指对于用户本人的群成员维度自定义字段值，自己是否有读写权限。例如，群成员维度的自定义字段 "MemberLevel"，用于表示成员在群组中的等级，本人可以读取自己的等级，但无权修改自己的等级，因此字段的"自己的读写权限"为"可读/不可写"。

**注意：**

不支持删除或者修改已配置的自定义字段，请谨慎操作。

## 自定义回调

第三方回调是 App 实现特殊需求的重要方式之一，为用户提供了自定义行为的能力。即时通信 IM 群组系统支持多种回调，具体参见[第三方回调简介](https://cloud.tencent.com/document/product/269/1522)以及[回调命令列表](https://cloud.tencent.com/document/product/269/1523)。

---

© 2025 Tencent Cloud. All Rights Reserved.
""".format(date=datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
    
    return content


def main():
    """
    主函数
    """
    print("=" * 60)
    print("腾讯云IM群组系统文档转Markdown工具")
    print("=" * 60)
    
    # 生成Markdown内容
    markdown_content = create_tencent_im_markdown()
    
    # 保存到文件
    filename = "腾讯云IM群组系统完整文档.md"
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(markdown_content)
        
        print(f"✅ 文档已成功保存到: {filename}")
        print(f"📄 文件大小: {len(markdown_content.encode('utf-8'))} 字节")
        print(f"📝 字符数: {len(markdown_content)} 个字符")
        
    except Exception as e:
        print(f"❌ 保存文件失败: {e}")


if __name__ == "__main__":
    main()